{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kalash Sheth\\\\Desktop\\\\svvasthya project\\\\frontend\\\\src\\\\components\\\\OtpVerification.jsx\",\n  _s = $RefreshSig$();\n// src/components/OtpVerification.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OtpVerification = () => {\n  _s();\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [otp, setOtp] = useState('');\n  const [role, setRole] = useState('User'); // or 'Customer' based on your application logic\n  const [message, setMessage] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const handleSendOtp = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/send-otp', {\n        mobileNumber,\n        role\n      });\n      setMessage(response.data.message);\n      setIsOtpSent(true);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error sending OTP:', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Error sending OTP');\n    }\n  };\n  const handleVerifyOtp = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/verify-otp', {\n        mobileNumber,\n        otp,\n        role\n      });\n      setMessage(response.data.message);\n      // Handle successful OTP verification (e.g., redirect to a different page or show success message)\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error verifying OTP:', error);\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Error verifying OTP');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-verification\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OTP Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Mobile Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: mobileNumber,\n        onChange: e => setMobileNumber(e.target.value),\n        placeholder: \"Enter mobile number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), !isOtpSent && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendOtp,\n      children: \"Send OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), isOtpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"OTP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          placeholder: \"Enter OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(OtpVerification, \"LI8ffrAmpS/Vjy0Eh2EF8UT6Y54=\");\n_c = OtpVerification;\nexport default OtpVerification;\nvar _c;\n$RefreshReg$(_c, \"OtpVerification\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","OtpVerification","_s","mobileNumber","setMobileNumber","otp","setOtp","role","setRole","message","setMessage","isOtpSent","setIsOtpSent","handleSendOtp","response","post","data","error","_error$response","_error$response$data","console","handleVerifyOtp","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kalash Sheth/Desktop/svvasthya project/frontend/src/components/OtpVerification.jsx"],"sourcesContent":["// src/components/OtpVerification.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst OtpVerification = () => {\r\n    const [mobileNumber, setMobileNumber] = useState('');\r\n    const [otp, setOtp] = useState('');\r\n    const [role, setRole] = useState('User'); // or 'Customer' based on your application logic\r\n    const [message, setMessage] = useState('');\r\n    const [isOtpSent, setIsOtpSent] = useState(false);\r\n\r\n    const handleSendOtp = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/auth/send-otp', { mobileNumber, role });\r\n            setMessage(response.data.message);\r\n            setIsOtpSent(true);\r\n        } catch (error) {\r\n            console.error('Error sending OTP:', error);\r\n            setMessage(error.response?.data?.error || 'Error sending OTP');\r\n        }\r\n    };\r\n\r\n    const handleVerifyOtp = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/auth/verify-otp', { mobileNumber, otp, role });\r\n            setMessage(response.data.message);\r\n            // Handle successful OTP verification (e.g., redirect to a different page or show success message)\r\n        } catch (error) {\r\n            console.error('Error verifying OTP:', error);\r\n            setMessage(error.response?.data?.error || 'Error verifying OTP');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"otp-verification\">\r\n            <h2>OTP Verification</h2>\r\n            <div>\r\n                <label>Mobile Number:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={mobileNumber}\r\n                    onChange={(e) => setMobileNumber(e.target.value)}\r\n                    placeholder=\"Enter mobile number\"\r\n                />\r\n            </div>\r\n            {!isOtpSent && (\r\n                <button onClick={handleSendOtp}>Send OTP</button>\r\n            )}\r\n            {isOtpSent && (\r\n                <>\r\n                    <div>\r\n                        <label>OTP:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={otp}\r\n                            onChange={(e) => setOtp(e.target.value)}\r\n                            placeholder=\"Enter OTP\"\r\n                        />\r\n                    </div>\r\n                    <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n                </>\r\n            )}\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OtpVerification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}