{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kalash Sheth\\\\Desktop\\\\svvasthya project\\\\frontend\\\\src\\\\components\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [otp, setOTP] = useState('');\n  const [verificationStatus, setVerificationStatus] = useState('');\n  const handleSendOTP = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/send-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mobileNumber\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setVerificationStatus('OTP sent successfully. Check your mobile.');\n        setIsVerified(true);\n      } else {\n        setVerificationStatus('Failed to send OTP. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      setVerificationStatus('Error sending OTP. Please try again later.');\n    }\n  };\n  const handleVerifyOTP = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mobileNumber,\n          otp\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setVerificationStatus('OTP verification successful. Proceed with registration.');\n        // Call a function to proceed with registration\n        // e.g., registerUser();\n      } else {\n        setVerificationStatus('OTP verification failed. Please check your OTP and try again.');\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setVerificationStatus('Error verifying OTP. Please try again later.');\n    }\n  };\n  const registerUser = async () => {\n    try {\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mobileNumber,\n          otp\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('User registered successfully:', data);\n        // Navigate to the next step or redirect to another page\n        // Example: history.push('/dashboard');\n      } else {\n        console.error('Failed to register user:', data.error);\n        setVerificationStatus('Failed to register user. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error registering user:', error);\n      setVerificationStatus('Error registering user. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Mobile Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: mobileNumber,\n        onChange: e => setMobileNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendOTP,\n      children: \"Send OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), verificationStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: verificationStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"OTP:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: otp,\n        onChange: e => setOTP(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerifyOTP,\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: registerUser,\n      disabled: !isVerified,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"5U8ho5E+IIBdPTvlv7H/NQC+4Ik=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","_s","mobileNumber","setMobileNumber","otp","setOTP","verificationStatus","setVerificationStatus","handleSendOTP","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setIsVerified","error","console","handleVerifyOTP","registerUser","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","disabled","isVerified","_c","$RefreshReg$"],"sources":["C:/Users/Kalash Sheth/Desktop/svvasthya project/frontend/src/components/Signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Signup = () => {\r\n  const [mobileNumber, setMobileNumber] = useState('');\r\n  const [otp, setOTP] = useState('');\r\n  const [verificationStatus, setVerificationStatus] = useState('');\r\n\r\n  const handleSendOTP = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/send-otp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ mobileNumber }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setVerificationStatus('OTP sent successfully. Check your mobile.');\r\n        setIsVerified(true); \r\n      } else {\r\n        setVerificationStatus('Failed to send OTP. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending OTP:', error);\r\n      setVerificationStatus('Error sending OTP. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/verify-otp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ mobileNumber, otp }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setVerificationStatus('OTP verification successful. Proceed with registration.');\r\n        // Call a function to proceed with registration\r\n        // e.g., registerUser();\r\n      } else {\r\n        setVerificationStatus('OTP verification failed. Please check your OTP and try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verifying OTP:', error);\r\n      setVerificationStatus('Error verifying OTP. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const registerUser = async () => {\r\n    try {\r\n      const response = await fetch('/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          mobileNumber,\r\n          otp,\r\n        }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        console.log('User registered successfully:', data);\r\n        // Navigate to the next step or redirect to another page\r\n        // Example: history.push('/dashboard');\r\n      } else {\r\n        console.error('Failed to register user:', data.error);\r\n        setVerificationStatus('Failed to register user. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error registering user:', error);\r\n      setVerificationStatus('Error registering user. Please try again later.');\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Signup</h2>\r\n      <label>\r\n        Mobile Number:\r\n        <input type=\"text\" value={mobileNumber} onChange={(e) => setMobileNumber(e.target.value)} />\r\n      </label>\r\n      <br />\r\n      <button onClick={handleSendOTP}>Send OTP</button>\r\n      <br />\r\n      {verificationStatus && <p>{verificationStatus}</p>}\r\n      <br />\r\n      <label>\r\n        OTP:\r\n        <input type=\"text\" value={otp} onChange={(e) => setOTP(e.target.value)} />\r\n      </label>\r\n      <br />\r\n      <button onClick={handleVerifyOTP}>Verify OTP</button>\r\n      <br />\r\n      <button onClick={registerUser} disabled={!isVerified}>Register</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}